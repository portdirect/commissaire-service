# Copyright (C) 2016  Red Hat, Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
---
- name: bootstrap
  hosts: commissaire_targets
  gather_facts: no
  tasks:
    - set_fact:
        is_atomic: False
    - name: Checking for Atomic model
      stat:
        path: /run/ostree-booted
      register: ostree_booted
      ignore_errors: True
    - name: Update is_atomic if using the Atomic model
      set_fact:
        is_atomic: "{{ ostree_booted.stat.exists }}"
      when: ostree_booted.stat.exists is defined
    - debug: msg="is_atomic={{ is_atomic }}"
    - name: Enable Package Repositories
      command: "{{ commissaire_enable_pkg_repos }}"
      when: "is_atomic == False"
    - name: Install libselinux-python
      command: "{{ commissaire_install_libselinux_python }}"
      when: "is_atomic == False"
    - name: Install Flannel
      command: "{{ commissaire_install_flannel }}"
      when: "is_atomic == False"
    - name: Configure Flannel
      template:
        src: "{{ commissaire_flanneld_config_local }}"
        dest: "{{ commissaire_flanneld_config }}"
        force: yes
    - name: Add Etcd Client Side Certificate
      copy:
        dest: "{{ commissaire_etcd_client_cert_path }}"
        src: "{{ commissaire_etcd_client_cert_path_local }}"
      when: "commissaire_etcd_client_cert_path is defined"
    - name: Add Etcd Client Side Key
      copy:
        dest: "{{ commissaire_etcd_client_key_path }}"
        src: "{{ commissaire_etcd_client_key_path_local }}"
      when: "commissaire_etcd_client_key_path is defined"
    - name: Add Etcd CA
      copy:
        dest: "{{ commissaire_etcd_ca_path }}"
        src: "{{ commissaire_etcd_ca_path_local }}"
      when: "commissaire_etcd_ca_path is defined"
    - name: Install Docker
      command: "{{ commissaire_install_docker }}"
      when: "is_atomic == False"
    - name: Configure Docker
      template:
        dest: "{{ commissaire_docker_config }}"
        src: "{{ commissaire_docker_config_local }}"
        force: yes
    - name: Enable and Start Base Services
      service:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      with_items:
        - "{{ commissaire_flannel_service }}"
        - "{{ commissaire_docker_service }}"
